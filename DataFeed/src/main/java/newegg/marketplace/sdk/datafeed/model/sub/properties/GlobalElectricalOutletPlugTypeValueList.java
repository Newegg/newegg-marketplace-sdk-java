//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.03.12 at 02:15:02 PM CST 
//


package newegg.marketplace.sdk.datafeed.model.sub.properties;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for GlobalElectricalOutletPlugTypeValueList.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;simpleType name="GlobalElectricalOutletPlugTypeValueList"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="Plug Type ��A�� (USA, Canada, Mexico, Japan)"/&gt;
 *     &lt;enumeration value="Plug Type ��B�� (USA, Canada, Mexico, Japan)"/&gt;
 *     &lt;enumeration value="Plug Type ��C�� (China, Ireland, Greece, Spain)"/&gt;
 *     &lt;enumeration value="Plug Type ��D�� (India, Pakistan, Ghana, Bangladesh)"/&gt;
 *     &lt;enumeration value="Plug Type ��E�� (Poland, Belgium, France, Slovakia)"/&gt;
 *     &lt;enumeration value="Plug Type ��F�� (Netherlands, Germany, Austria)"/&gt;
 *     &lt;enumeration value="Plug Type ��G�� (Ireland, UK, Singapore)"/&gt;
 *     &lt;enumeration value="Plug Type ��I�� (Australia, New Zealand, Argentina)"/&gt;
 *     &lt;enumeration value="Plug Type ��J�� (Switzerland, Jordan, Rwanda)"/&gt;
 *     &lt;enumeration value="Plug Type ��K�� (Denmark, Greenland, Senegal)"/&gt;
 *     &lt;enumeration value="Plug Type ��L�� (Italy, Syria, Libya, Chile)"/&gt;
 *     &lt;enumeration value="Plug type ��M�� (South Africa, Swaziland)"/&gt;
 *     &lt;enumeration value="Plug type ��N�� (Brazil)"/&gt;
 *     &lt;enumeration value="Plug Type ��O�� (Thailand)"/&gt;
 *     &lt;enumeration value="Amplifier"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "GlobalElectricalOutletPlugTypeValueList")
@XmlEnum
public enum GlobalElectricalOutletPlugTypeValueList {

    @XmlEnumValue("Plug Type \u201cA\u201d (USA, Canada, Mexico, Japan)")
    PLUG_TYPE_A_USA_CANADA_MEXICO_JAPAN("Plug Type \u201cA\u201d (USA, Canada, Mexico, Japan)"),
    @XmlEnumValue("Plug Type \u201cB\u201d (USA, Canada, Mexico, Japan)")
    PLUG_TYPE_B_USA_CANADA_MEXICO_JAPAN("Plug Type \u201cB\u201d (USA, Canada, Mexico, Japan)"),
    @XmlEnumValue("Plug Type \u201cC\u201d (China, Ireland, Greece, Spain)")
    PLUG_TYPE_C_CHINA_IRELAND_GREECE_SPAIN("Plug Type \u201cC\u201d (China, Ireland, Greece, Spain)"),
    @XmlEnumValue("Plug Type \u201cD\u201d (India, Pakistan, Ghana, Bangladesh)")
    PLUG_TYPE_D_INDIA_PAKISTAN_GHANA_BANGLADESH("Plug Type \u201cD\u201d (India, Pakistan, Ghana, Bangladesh)"),
    @XmlEnumValue("Plug Type \u201cE\u201d (Poland, Belgium, France, Slovakia)")
    PLUG_TYPE_E_POLAND_BELGIUM_FRANCE_SLOVAKIA("Plug Type \u201cE\u201d (Poland, Belgium, France, Slovakia)"),
    @XmlEnumValue("Plug Type \u201cF\u201d (Netherlands, Germany, Austria)")
    PLUG_TYPE_F_NETHERLANDS_GERMANY_AUSTRIA("Plug Type \u201cF\u201d (Netherlands, Germany, Austria)"),
    @XmlEnumValue("Plug Type \u201cG\u201d (Ireland, UK, Singapore)")
    PLUG_TYPE_G_IRELAND_UK_SINGAPORE("Plug Type \u201cG\u201d (Ireland, UK, Singapore)"),
    @XmlEnumValue("Plug Type \u201cI\u201d (Australia, New Zealand, Argentina)")
    PLUG_TYPE_I_AUSTRALIA_NEW_ZEALAND_ARGENTINA("Plug Type \u201cI\u201d (Australia, New Zealand, Argentina)"),
    @XmlEnumValue("Plug Type \u201cJ\u201d (Switzerland, Jordan, Rwanda)")
    PLUG_TYPE_J_SWITZERLAND_JORDAN_RWANDA("Plug Type \u201cJ\u201d (Switzerland, Jordan, Rwanda)"),
    @XmlEnumValue("Plug Type \u201cK\u201d (Denmark, Greenland, Senegal)")
    PLUG_TYPE_K_DENMARK_GREENLAND_SENEGAL("Plug Type \u201cK\u201d (Denmark, Greenland, Senegal)"),
    @XmlEnumValue("Plug Type \u201cL\u201d (Italy, Syria, Libya, Chile)")
    PLUG_TYPE_L_ITALY_SYRIA_LIBYA_CHILE("Plug Type \u201cL\u201d (Italy, Syria, Libya, Chile)"),
    @XmlEnumValue("Plug type \u201cM\u201d (South Africa, Swaziland)")
    PLUG_TYPE_M_SOUTH_AFRICA_SWAZILAND("Plug type \u201cM\u201d (South Africa, Swaziland)"),
    @XmlEnumValue("Plug type \u201cN\u201d (Brazil)")
    PLUG_TYPE_N_BRAZIL("Plug type \u201cN\u201d (Brazil)"),
    @XmlEnumValue("Plug Type \u201cO\u201d (Thailand)")
    PLUG_TYPE_O_THAILAND("Plug Type \u201cO\u201d (Thailand)"),
    @XmlEnumValue("Amplifier")
    AMPLIFIER("Amplifier");
    private final String value;

    GlobalElectricalOutletPlugTypeValueList(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static GlobalElectricalOutletPlugTypeValueList fromValue(String v) {
        for (GlobalElectricalOutletPlugTypeValueList c: GlobalElectricalOutletPlugTypeValueList.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
